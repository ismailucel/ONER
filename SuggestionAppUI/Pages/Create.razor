@page "/Create"
@using SuggestionAppUI.Models
@using SuggestionAppUI.Components

@inject ICategoryData categoryData
@inject ISuggestionData suggestionData
@inject IUserData userData
@inject NavigationManager navManager


<h1>Make A Suggesiton</h1>

<div>
    <div>
        <div>
            <button @onclick="ClosePage"></button>
        </div>
        @if (categories is not null)
        {
            <EditForm Model="suggestion" OnValidSubmit="CreateSuggestion">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div>
                    <label for="suggestion-text">Suggestion</label>
                    <div>Focus on the project idea you want to do it.</div>
                    <InputText id ="suggestion-text" @bind-Value="suggestion.Suggestion" />
                </div>
                     <div class="input-section">
                    <label class="form-label fw-bold text-uppercase" for="category">Category</label>
                    <div class="input-description">Choose one category.</div>
                    <div class="col-lg-8">
                        <MyInputRadioGroup id="category" @bind-Value="suggestion.CategoryId" >
                            @foreach (var c in categories)
                            {
                                 <div class="radio-item-group">
                                     <InputRadio Value="@c.Id" id="@c.Id" />
                                     <label for="@c.Id">@c.CategoryName - @c.CategoryDescription</label>
                                 </div>
                            }
                       </MyInputRadioGroup>
                    </div>
                </div>
                <div>
                    <label for="description">Description</label>
                    <div>Briefly describe your project idea.</div>
                    <InputTextArea id ="description" @bind-Value="suggestion.Description" />
                </div>
                <div >
                    <button type="submit">Suggest</button>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    private CreateSuggestionModel suggestion = new();
    private List<CategoryModel> categories;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        categories = await categoryData.GetAllCategories();

        //TODO - Replace with the user lookup
        loggedInUser = await userData.GetUserFromAuthentication("abc-123");
    }
    
    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private async Task CreateSuggestion()
    {
         // Mapping suggestion to CreateSuggestionModel
        SuggestionModel s = new();
        s.Suggestion = suggestion.Suggestion;
        s.Description = suggestion.Description;
        s.Author = new BasicUserModel(loggedInUser);
        s.Category = categories.Where(c => c.Id == suggestion.CategoryId).FirstOrDefault();
        if (s.Category is null)
        {
            suggestion.CategoryId = "";
            return;
        }

        await suggestionData.CreateSuggestion(s);
        suggestion = new();
        ClosePage();
    }
}
